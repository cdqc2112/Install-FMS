# Root path of shared directories
ROOT_PATH=/opt/fms/solution
MASTER_ROOT_PATH=/opt/fms/master

# Logs dir
LOG_DIR=/logs
# logs subdirectories permissions octal values used in chmod: all permissions for owner, execute and read for group, nothing for others
LOG_DIR_MOD=750
RTU=/rtu
RTU_UPDATES_LOGS=/rtu_updates
RTU_GENERAL_LOGS=/rtu_general
ALARM_LOG=/alarming
MEASUREMENT_HANDLER_LOG=/measurement_handler
RTU_BROKER=/rtu_broker
TOPOLOGY_LOG=/topology_api
PROXY_LOG=/proxy
FILE_REPLICATION_LOG=/file_replication
ALARMING_METRICS_PROXY_LOG=/metric_proxy
RTU_API_GATEWAY=/rtu_api_gateway

# Persistent data path (Comment the following lines on Windows - DB does not support volume mapping on different HD)
PERSISTENT_DATA_DIR=/data
SECURITY_DATA=/security
TOPOLOGY_DATA=/topology
MEASUREMENT_DATA=/measurement
FILE_DATA=/files
ALARM_DATA=/alarms
ALARMING_METRICS_DATA=/prometheus
TOPOLOGY_UI_DATA=/topology_ui
FILE_REPLICATION_DATA=/file_replication
RTU_VERSION_CONTROLLER=/rtu_version_controller
DISTRIBUTION_DATA=/dist
METRIC_DATA=/metric
VICTORIA_METRICS_DATA=/victoria-metrics

CONFIG=/config
KEYCLOAK_CONFIG=/keycloak

# Time sync configuration
RTU_NTP_SERVER=pool.ntp.org

# Edit the DNS created by the customer - those DNS must be on the root certificate
ROOT_DNS="fms.<customer_domain>"
TOPOLOGY_API_DNS="api.fms.<customer_domain>"
ALARM_DNS="alarm.fms.<customer_domain>"
KEYCLOAK_DNS="auth.fms.<customer_domain>"
TOPOLOGY_UI_DNS="fms.<customer_domain>"
DATA_DNS="data.fms.<customer_domain>"
MESSAGE_DNS="message.fms.<customer_domain>"

# Keycloak users (all optional)
## Key Cloack master realm admin password
KEYCLOAK_MASTER_ADMIN_USER_INIT=
KEYCLOAK_MASTER_ADMIN_USER_INIT_SECRET=
# Keycloak<=>topology secure mode: if true, the keycloak master admin password secret is not passed to topology
KEYCLOAK_TOPOLOGY_MASTER_SECURE=true

## Key cloak fiber realm admin
KEYCLOAK_FIBER_ADMIN_USER_INIT=
KEYCLOAK_FIBER_ADMIN_USER_INIT_SECRET=

## Test user on the fiber realm
KEYCLOAK_FIBER_TEST_USER_INIT=
KEYCLOAK_FIBER_TEST_USER_INIT_SECRET=

# Postgresql password secret used by Keycloak
KEYCLOAK_DB_PASSWORD_SECRET="<keycloak-postgres-passwd-secret>"

PROXY_SESSION_SECRET="<proxy-session-secret>"

# PostgreSQL password secret used by Topology
TOPOLOGY_DB_PASSWORD_SECRET="<topology-postgres-passwd-secret>"

# IAM
# IAM: local KEYCLOAK
IAM_SERVER="auth.fms.<customer_domain>"
IAM_TYPE=KEYCLOAK
IAM_IAT_SLACK_SEC=120
IAM_CLIENT_ID=fg-topologyapi
IAM_CLIENT_SECRET="<iam-client-secret>"

#IAM: WSO2 Cloud
#IAM_SERVER=iam-coe-qa1.exfoconnect.com:443
#IAM_USSP=iam-coe-qa1-ussp.exfoconnect.com/home/exfo-applications
#IAM_TYPE=WSO2
#IAM_IAT_SLACK_SEC=120
#IAM_CLIENT_ID=AAAAAAAAAAAAAAAAAAAAAAAAAAAA
#IAM_CLIENT_SECRET=secretSecretSecretSecretSecr
#IAM_ADMIN_USER=admin@wso2.com
#IAM_ADMIN_PASSWORD=PASSWORD

#DEBUG MODE
#DEBUG="debug"

# Edit the  docker secret of customer certificate - must contains two files single.key and single.cert
SERVER_CERT_SECRET=
SERVER_CERT_KEY_SECRET=

# Trustsotre docker secret name for keycloak & topology-api
FGMS_TRUSTSTORE_SECRET=
FGMS_TRUSTSTORE_PASSWD_SECRET=

# RTU/FMS SSL exchange and authentification requirement - If set to true, RTU must send ssl certificate
RTU_SSL_AUTH_REQUIRED=false

# Truststore docker secret name for file / password for RTU/FMS SSL exchange and auth
# requirement
RTU_SSL_AUTH_TRUSTSTORE_FILE_SECRET=
RTU_SSL_AUTH_TRUSTSTORE_PASSWD_SECRET=

# Optional regex against the certificate's DN. Non matching certificate will be
# rejected
RTU_SSL_AUTH_CERT_DN_REGEXP=

# TLS configuration
# Active TLS versions [supported options are TLSv1.2 and/or TLSv1.3]. A solution with FG750s will inevitably require TLSv1.2
TLS_VERSION=TLSv1.2,TLSv1.3
# TLS supported cipher suites (ActiveMQ and NGINX)
# Security level should be Secure or Recommended:  https://ciphersuite.info/cs/?tls=all&security=secure&software=openssl&singlepage=true)
BROKER_TLS13_CIPHER_SUITES=TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384
BROKER_TLS12_CIPHER_SUITES=TLS_DHE_DSS_WITH_AES_128_GCM_SHA256,TLS_DHE_DSS_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
PROXY_TLS13_CIPHER_SUITES=TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384
PROXY_TLS12_CIPHER_SUITES=DHE-RSA-AES128-CCM:ECDHE-ECDSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:ECDHE-PSK-CHACHA20-POLY1305:DHE-PSK-AES128-GCM-SHA256:DHE-PSK-CHACHA20-POLY1305:TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256:DHE-RSA-AES256-CCM8:TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384:TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-CCM:TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384:DHE-RSA-AES256-CCM:TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:DHE-PSK-AES128-CCM8:TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384:DHE-PSK-AES256-CCM:TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256:ECDHE-ECDSA-AES128-CCM8:DHE-DSS-AES128-GCM-SHA256:TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256:TLS_ECCPWD_WITH_AES_128_CCM_SHA256:TLS_ECDHE_PSK_WITH_AES_128_CCM_8_SHA256:DHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256:TLS_ECDHE_PSK_WITH_AES_128_GCM_SHA256:TLS_ECCPWD_WITH_AES_256_CCM_SHA384:DHE-DSS-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-CCM8:TLS_ECDHE_PSK_WITH_AES_128_CCM_SHA256:DHE-PSK-AES256-GCM-SHA384:DHE-PSK-AES256-CCM8:DHE-RSA-AES128-CCM8:TLS_ECCPWD_WITH_AES_128_GCM_SHA256:ECDHE-RSA-CHACHA20-POLY1305:TLS_ECDHE_PSK_WITH_AES_256_GCM_SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_ECCPWD_WITH_AES_256_GCM_SHA384:TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256:TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384:TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384:ECDHE-ECDSA-AES128-CCM:ECDHE-RSA-AES128-GCM-SHA256:TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256:DHE-PSK-AES128-CCM:TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384

#TnM services env
MONGO_USERNAME_MEASURE=OpticalMaster
MONGO_PASSWORD_MEASURE_SECRET="<mongo-passwd-measure-secret>"
MONGO_MEASURE_REPLICATION_TOKEN_SECRET=

# Alarming services env
MONGO_USERNAME_ALARMING=OpticalMaster
MONGO_PASSWORD_ALARMING_SECRET="<mongo-passwd-alarming-secret>"
MONGO_ALARM_REPLICATION_TOKEN_SECRET=
ALARMING_CONFIG_SNMP_FILE_SECRET=
ALARMING_CONFIG_EMAIL_FILE_SECRET=

# Metrics proxy db env
MONGO_USERNAME_ALARMING_METRICS=OpticalMaster
MONGO_PASSWORD_ALARMING_METRICS_SECRET="<mongo-passwd-alarming-metrics-secret>"

# Rtu api gatway db env
MONGO_USERNAME_RTU_API_GATEWAY=OpticalMaster
MONGO_PASSWORD_RTU_API_GATEWAY_SECRET="<mongo-passwd-rtu-api-gateway-db-secret>"

EDITION=FGMS

# Auto refresh time in seconds
ALARM_AUTO_REFRESH_INTERVAL=30

# Alarms unshelving job repeat interval in minutes(s)
ALARM_UNSHELVING_INTERVAL_IN_MINUTES=60

# Limits toplogy-api users end point calls from alarming
MAX_CONCURRENT_TOPOLOGY_REQUEST=3
MIN_WAIT_TIME_IN_CONCURRENT_TOPOLOGY_REQUEST=333

# Implementation version for snmp "0" for old, "1" for standard implementation
SNMP_IMPLEMENTATION_VERSION=0

# Replication configuration
REPLICATION_ROOT_PATH=/opt/fms/replication
REPLICATION_DATA_DIR=/replicated_data
BACKUP_DIR=/backup
LATEST_DIR=/latest
HISTORY_DIR=/history
REPLICATION_ENABLED=false

# Replication config update occurency
# FILE_REPLICATION_PERIODICITY value should not be updated unless it is increased 
FILE_REPLICATION_PERIODICITY=3600
FILE_REPLICATION_RETRY=60
FILE_REPLICATION_SECRET=

# BACKUP CONFIGS
# The script should be in fms_backup directory
FMS_BACKUP_SCRIPT_DIR=/deployment/backup

# Backup exec config
# Client script
# Default value is ${MASTER_ROOT_PATH}${FMS_BACKUP_SCRIPT_DIR}/client-script-example.sh
BACKUP_ALERT_SCRIPT_PATH=/opt/fms/master/deployment/backup/client-script-example.sh

# Should be used from fms_backup directory
# Default value is ${MASTER_ROOT_PATH}${FMS_BACKUP_SCRIPT_DIR}/send-alert.sh
ALERT_SCRIPT_PATH=/opt/fms/master/deployment/backup/send-alert.sh
# Default value is ${MASTER_ROOT_PATH}${LOG_DIR}${BACKUP_DIR}/backupLog.log
BACKUP_LOG_FULL_PATH=/opt/fms/master/logs/backup/backupLog.log
MAX_BACKUP_ALLOW=2

# Period of logs expiration in days
PROXY_LOG_EXPIRATION_PERIOD=61

# Activation of rtu-configuration-validator service
RTU_CONFIGURATION_VALIDATOR_SERVICE_ENABLED=true

# Rtu broker (activeMQ) access
JOLOKIA_USER=admin
JOLOKIA_PASSWORD_SECRET="<jolokia-pwd>"
RTU_BROKER_ADMIN_PASSWORD_SECRET="<broker-admin-pwd>"

# Rtu broker (activeMQ) configuration
RTU_BROKER_MAX_BROWSE_PAGE_SIZE=2000
RTU_BROKER_MAX_CONNECTIONS=5000
RTU_BROKER_EXPIRATION_TIMESTAMP_PERIOD=14400000
RTU_BROKER_DLQ_EXPIRATION=864000000

# When root squash is active on the main directory, enter uid:gid here
ROOT_SQUASH=

# User/Group for various services
KEYCLOAK_UID_GID=1000:1000
MEASUREMENT_FILE_UID_GID=1001:1001
MEASUREMENT_UID_GID=1002:1002
MEASUREMENT_HANDLER_UID_GID=1003:1003
RTU_VERSION_CONTROLLER_UID_GID=1004:1004
ALARMING_METRICS_UID_GID=1005:1005
OPTICAL_PROCESSING_UID_GID=1006:1006
RTU_CONFIGURATION_VALIDATOR_UID_GID=1007:1007
ALARMING_UID_GID=1008:1008
TOPOLOGY_API_UID_GID=1009:1009
ALERTMANAGER_UID_GID=1010:1010
PROXY_UID_GID=1011:1011
# Control nginx user directive when proxy/nginx must run as root (0:0)
PROXY_EFFECTIVE_UID_GID=1011:1011
TOPOLOGY_UI_UID_GID=1012:1012
RTU_BROKER_UID_GID=1013:1013
ALARMING_METRICS_PROXY_UID_GID=1014:1014
RTU_API_GATEWAY_UID_GID=1016:1016
CONDUCTOR_CEREBRO_UID_GID=1018:1018
CONDUCTOR_ELASTICSEARCH_UID_GID=1019:1019
CONDUCTOR_SERVER_UID_GID=1020:1020
CONDUCTOR_UI_UID_GID=1021:1021
CONFIG_REPLICATION_UID_GID=1022:1022
KEYCLOAK_PROXY_UID_GID=1023:1023
#victoria metrics user
VICTORIA_METRICS_UID_GID=1024:1024

# Distribution of client certificate. Provide names of docker secrets
# This is optional
# EST_PASSWORD_SECRET=est_password_20201231
# EST_CLIENT_KEY_SECRET=est_client_key_20201231
# EST_CLIENT_CER_SECRET=est_client_cer_20201231
# EST_CLIENT_CACER_SECRET=est_client_cacer_20201231

CONDUCTOR_DB_PASSWORD_SECRET="<conductor-postgres-passwd-secret>"
CONDUCTOR_DATA=/conductor
CONDUCTOR_CEREBRO=/conductor-cerebro
CONDUCTOR_ELASTICSEARCH=/conductor-es

# token to authenticate rtu http request
RTU_VERSION_CONTROLLER_TOKEN_SECRET="<rtu-version-controller-token-secret>"

# Environment variable to manage ports exposition
EXPOSE_DEV_PORT=false

# Memory limits
MEMORY_LIMIT_MONGODB_MEASDATA_MO=1024
MEMORY_LIMIT_MONGODB_ALARMING_MO=1024
MEMORY_LIMIT_MONGODB_ALARMINGMETRICSPROXY_MO=1024
MEMORY_LIMIT_MONGODB_RTUAPIGATEWAY_MO=1024
MEMORY_LIMIT_TOPOLOGYAPI_MO=
MEMORY_LIMIT_RTUBROKER_MO=
MEMORY_LIMIT_MEASHANDLER_MO=
MEMORY_LIMIT_ALARMINGMETRICS_MO=
# adviced value: 1024 + 40 per 1000 optical routes
MEMORY_LIMIT_VICTORIA_METRICS_MO=1024

# Victoria metrics retention period
VICTORIA_METRICS_RETENTION_PERIOD_MONTHS=12

# swarm (default) or k8s
ORCHESTRATOR=swarm
