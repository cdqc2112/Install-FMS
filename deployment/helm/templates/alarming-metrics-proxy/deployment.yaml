{{ $serv_id := "alarming-metrics-proxy" }}
{{ $serv_uidgid := .Values.env.ALARMING_METRICS_PROXY_UID_GID }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fms.fullname" . }}-{{$serv_id}}
  labels:
    {{- include "fms.labels" . | nindent 4 }}
    app.kubernetes.io/service: {{$serv_id}}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "fms.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/service: {{$serv_id}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "fms.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/service: {{$serv_id}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fms.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ (split ":" $serv_uidgid)._0 }}
        runAsGroup: {{ (split ":" $serv_uidgid)._1 }}
        fsGroup: {{ (split ":" $serv_uidgid)._1 }}
      nodeSelector:
        role: "primary"
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "{{$serv_id}}"
      containers:
        - name: {{$serv_id}}
          {{ include "fms.docker-image" (merge (dict "image_id" "fms-metric-proxy") $ ) | nindent 10 }}
          imagePullPolicy: IfNotPresent
          env:
          - name: MONGO_HOST
            value: "alarming-metrics-proxy-db"
          - name: MONGO_PORT
            value: "27017"
          - name: MONGO_INITDB_ROOT_USERNAME
            value: "{{ .Values.env.MONGO_USERNAME_ALARMING_METRICS }}"
          - name: MONGO_INITDB_ROOT_PASSWORD_FILE
            value: "/run/secrets/alarming_metrics_db_pwd"
          - name: PULL_INTERVAL
            value: "0.5"
          - name: GROUP_KEYS
            value: "{{.Values.env.GROUP_KEYS}}"
          - name: USE_KEYCLOAK
            value: "false"
          - name: DEBUG_ENV
            value: "{{.Values.env.DEBUG_ENV}}"
          - name: TOPOLOGY_API_DNS
            value: "topology"
          - name: TOPOLOGY_API_PORT
            value: "9090"
          startupProbe:
            httpGet:
              path: /v1/healthcheck
              port: 7071
              httpHeaders:
              - name: x-Token-Username
                value: alarmingUser
              - name: x-Token-Roles
                value: '["fg-alarm-master","fg-alarm-read"]'
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 8
            # Allowed startup time
            failureThreshold: 18
          livenessProbe:
            httpGet:
              path: /v1/healthcheck
              port: 7071
              httpHeaders:
              - name: x-Token-Username
                value: alarmingUser
              - name: x-Token-Roles
                value: '["fg-alarm-master","fg-alarm-read"]'
            timeoutSeconds: 8
            periodSeconds: 30
            failureThreshold: 3
          volumeMounts:
          - name: logs
            mountPath: /var/www/logs
          - name: alarming-metrics-db-pwd
            mountPath: /run/secrets/alarming_metrics_db_pwd
            subPath: secret
            readOnly: true
          resources:
            limits:
              memory: "2048M"
            requests:
              memory: "204.8M"
      volumes:
      - name: logs
        {{- include "fms.pod-volume.log" (merge (dict "id" $serv_id "path" .Values.env.METRIC_PROXY_LOG) $) | nindent 8 }}
      - name: alarming-metrics-db-pwd
        secret:
          secretName: {{.Values.env.MONGO_PASSWORD_ALARMING_METRICS_SECRET}}
          defaultMode: 0440