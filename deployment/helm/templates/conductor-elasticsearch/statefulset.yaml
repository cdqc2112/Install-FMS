{{ $serv_id := "conductor-elasticsearch" }}
{{ $serv_uidgid := .Values.env.CONDUCTOR_ELASTICSEARCH_UID_GID }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fms.fullname" . }}-{{$serv_id}}
  labels:
    {{- include "fms.labels" . | nindent 4 }}
    app.kubernetes.io/service: {{$serv_id}}
spec:
  serviceName: {{ include "fms.fullname" . }}-{{$serv_id}}
  replicas: 1
  selector:
    matchLabels:
      {{- include "fms.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/service: {{$serv_id}}
  template:
    metadata:
      labels:
        {{- include "fms.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/service: {{$serv_id}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fms.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ (split ":" $serv_uidgid)._0 }}
        runAsGroup: {{ (split ":" $serv_uidgid)._1 }}
        fsGroup: {{ (split ":" $serv_uidgid)._1 }}
      nodeSelector:
        role: "primary"
      containers:
        - name: {{$serv_id}}
          {{ include "fms.docker-image" (merge (dict "image_id" "fms-elasticsearch") $ ) | nindent 10 }}
          imagePullPolicy: IfNotPresent
          env:
          - name: transport.host
            value: "0.0.0.0"
          - name: node.master
            value: "true"
          - name: node.attr.role
            value: "primary"
          - name: node.name
            value: "conductor-elasticsearch"
          - name: discovery.type
            value: "single-node"
          - name: ES_INDEX_SETTINGS_REPLICA
            value: '"auto_expand_replicas":"0-all"'
          - name: ES_INDEX_TARGET_REPLICA
            value: "conductor*,task*"
          - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
            value: "true"
          - name: "true"
            value: "-Xms1024m -Xmx2042m"
          - name: "ES_JAVA_OPTS"
            value: "-Xms1024m -Xmx2042m"
          volumeMounts:
          - name: data
            mountPath: /usr/share/elasticsearch/data
          startupProbe:
            exec: 
              command: [ bash, -c, '[ -f "$INIT_DONE_FILE" ] && curl -f -s http://localhost:9200/_cluster/health?wait_for_status=yellow > /dev/null || exit 1' ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 8
            # Allowed startup time
            failureThreshold: 120
          livenessProbe:
            exec: 
              command: [ bash, -c, '[ -f "$INIT_DONE_FILE" ] && curl -f -s http://localhost:9200/_cluster/health?wait_for_status=yellow > /dev/null || exit 1' ]
            timeoutSeconds: 10
            periodSeconds: 30
            failureThreshold: 3
          resources:
            limits:
              memory: "3072M"
            requests:
              memory: "307.2M"
  volumeClaimTemplates:
  - metadata:
      name: data
    {{- include "fms.volumeclaim.data" (merge (dict "id" $serv_id) $) | nindent 4 }}
