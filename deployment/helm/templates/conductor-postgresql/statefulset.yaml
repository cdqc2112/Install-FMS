{{ $serv_id := "conductor-postgresql" }}
{{ $serv_uidgid := "70:70" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fms.fullname" . }}-{{$serv_id}}
  labels:
    {{- include "fms.labels" . | nindent 4 }}
    app.kubernetes.io/service: {{$serv_id}}
spec:
  serviceName: {{ include "fms.fullname" . }}-{{$serv_id}}
  replicas: 1
  selector:
    matchLabels:
      {{- include "fms.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/service: {{$serv_id}}
  template:
    metadata:
      labels:
        {{- include "fms.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/service: {{$serv_id}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fms.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ (split ":" $serv_uidgid)._0 }}
        runAsGroup: {{ (split ":" $serv_uidgid)._1 }}
        fsGroup: {{ (split ":" $serv_uidgid)._1 }}
      nodeSelector:
        role: "primary"
      containers:
        - name: {{$serv_id}}
          {{ include "fms.docker-image" (merge (dict "image_id" "fms-postgresql-db") $ ) | nindent 10 }}
          imagePullPolicy: IfNotPresent
          env:
          - name: POSTGRES_DB
            value: conductor
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD_FILE
            value: /run/secrets/conductor_db_pwd
          - name: POSTGRES_TUNING
            value: |
                synchronous_commit = off
                work_mem='64MB'
                shared_buffers='1024MB'
                stats_temp_directory='/var/run/postgresql/'
          volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
          - name: conductor-db-pwd
            mountPath: /run/secrets/conductor_db_pwd
            subPath: secret
            readOnly: true
          startupProbe:
            exec:
              command: [ "bash", "-c", "netstat -ltn | grep -c :5432 && pg_isready" ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 8
            # Allowed startup time
            failureThreshold: 130
          livenessProbe:
            exec:
              command: [ "bash", "-c", "netstat -ltn | grep -c :5432 && pg_isready" ]
            timeoutSeconds: 8
            periodSeconds: 30
            failureThreshold: 3
          resources:
            limits:
              memory: "4096M"
            requests:
              memory: "409.6M"
      volumes:
      # Remark: should we switch to persistentVolumeClaim and externalize that ?
      - name: conductor-db-pwd
        secret:
          secretName: {{.Values.env.CONDUCTOR_DB_PASSWORD_SECRET}}
          defaultMode: 0440
  volumeClaimTemplates:
  - metadata:
      name: data
    {{- include "fms.volumeclaim.data" (merge (dict "id" $serv_id) $) | nindent 4 }}
