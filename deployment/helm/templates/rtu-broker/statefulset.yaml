{{ $serv_id := "rtu-broker" }}
{{ $serv_uidgid := .Values.env.RTU_BROKER_UID_GID }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fms.fullname" . }}-{{$serv_id}}
  labels:
    {{- include "fms.labels" . | nindent 4 }}
    app.kubernetes.io/service: {{$serv_id}}
spec:
  serviceName: {{ include "fms.fullname" . }}-{{$serv_id}}
  replicas: 1
  selector:
    matchLabels:
      {{- include "fms.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/service: {{$serv_id}}
  template:
    metadata:
      labels:
        {{- include "fms.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/service: {{$serv_id}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fms.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ (split ":" $serv_uidgid)._0 }}
        runAsGroup: {{ (split ":" $serv_uidgid)._1 }}
        fsGroup: {{ (split ":" $serv_uidgid)._1 }}
      nodeSelector:
        role: "primary"
        endpoints: "true"
      containers:
        - name: {{$serv_id}}
          {{ include "fms.docker-image" (merge (dict "image_id" "fms-rtu-broker") $ ) | nindent 10 }}
          imagePullPolicy: IfNotPresent
          env:
          - name: SSL_AUTH_REQUIRED
            value: "{{.Values.env.RTU_SSL_AUTH_REQUIRED}}"
          - name: FGMS_TRUSTSTORE_PASSWD_FILE
            value: "fgms_rtu_truststore_passwd"
          - name: FGMS_TRUSTSTORE_FILE
            value: "fgms_rtu_truststore"
          - name: RTU_CERT_DN_REGEXP
            value: "{{.Values.env.RTU_SSL_AUTH_CERT_DN_REGEXP}}"
          - name: MESSAGE_DNS
            value: "{{.Values.env.MESSAGE_DNS}}"
          - name: TLS_PROTOCOL
            value: "{{.Values.env.TLS_VERSION}}"
          - name: TLS13_CIPHERS
            value: "{{.Values.env.BROKER_TLS13_CIPHER_SUITES}}"
          - name: TLS12_CIPHERS
            value: "{{.Values.env.BROKER_TLS12_CIPHER_SUITES}}"
          - name: MAX_BROWSE_PAGE_SIZE
            value: "{{.Values.env.RTU_BROKER_MAX_BROWSE_PAGE_SIZE}}"
          - name: MAX_CONNECTIONS
            value: "{{.Values.env.RTU_BROKER_MAX_CONNECTIONS}}"
          - name: EXPIRATION_TIMESTAMP_PERIOD
            value: "{{.Values.env.RTU_BROKER_EXPIRATION_TIMESTAMP_PERIOD}}"
          - name: DLQ_EXPIRATION
            value: "{{.Values.env.RTU_BROKER_DLQ_EXPIRATION}}"
          - name: SERVICE_UID_GID
            value: "{{.Values.env.RTU_BROKER_UID_GID}}"
          - name: JOLOKIA_USER
            value: "{{.Values.env.JOLOKIA_USER}}"
          - name: JOLOKIA_PASSWORD_FILE
            value: "/run/secrets/jolokia_pwd"
          - name: RTU_BROKER_ADMIN_PASSWORD_FILE
            value: "/run/secrets/rtu_broker_admin_pwd"
          - name: "ACTIVEMQ_OPTS"
            value: "-Xms1024m -Xmx{{.Values.env.MEMORY_LIMIT_RTUBROKER_MO_JAVA}}m"
          ports:
          - name: activemq
            containerPort: 61617
            hostPort: 61617
            protocol: TCP
          {{- if contains "true" .Values.env.EXPOSE_DEV_PORT }}
          - name: stomp
            containerPort: 61613
            hostPort: 61613
            protocol: TCP
          - name: jms
            containerPort: 61616
            hostPort: 61616
            protocol: TCP
          {{- end }}
          volumeMounts:
          - name: data
            mountPath: /opt/activemq/data/kahadb
          - name: logs
            mountPath: /opt/activemq/data/log
          - name: jolokia-password
            mountPath: /run/secrets/jolokia_pwd
            subPath: secret
            readOnly: true
          - name: rtu-broker-admin-password
            mountPath: /run/secrets/rtu_broker_admin_pwd
            subPath: secret
            readOnly: true
          startupProbe:
            exec:
              command: [ timeout, '8', bash, -c, 'curl --silent --netrc-file <(cat <<<"machine localhost port $ACTIVEMQ_UI login $JOLOKIA_USER password $(< "${JOLOKIA_PASSWORD_FILE}")") "http://localhost:$ACTIVEMQ_UI/api/jolokia/read/org.apache.activemq:type=Broker,brokerName=rtu-broker,service=Health" | grep "\"CurrentStatus\":\"Good\"" ' ]
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 8
            # Allowed startup time
            failureThreshold: 21
          livenessProbe:
            exec:
              command: [ timeout, '20', bash, -c, 'curl --silent --netrc-file <(cat <<<"machine localhost port $ACTIVEMQ_UI login $JOLOKIA_USER password $(< "${JOLOKIA_PASSWORD_FILE}")") "http://localhost:$ACTIVEMQ_UI/api/jolokia/read/org.apache.activemq:type=Broker,brokerName=rtu-broker,service=Health" | grep "\"CurrentStatus\":\"Good\"" ' ]
            timeoutSeconds: 25
            periodSeconds: 30
            failureThreshold: 3
          resources:
            limits:
              memory: "{{.Values.env.MEMORY_LIMIT_RTUBROKER_MO}}M"
            requests:
              memory: "242M"
      volumes:
      - name: logs
        {{- include "fms.pod-volume.log" (merge (dict "id" $serv_id "path" .Values.env.RTU_BROKER) $) | nindent 8 }}
      - name: jolokia-password
        secret:
          secretName: {{.Values.env.JOLOKIA_PASSWORD_SECRET}}
          defaultMode: 0440
      - name: rtu-broker-admin-password
        secret:
          secretName: {{.Values.env.RTU_BROKER_ADMIN_PASSWORD_SECRET}}
          defaultMode: 0440
  volumeClaimTemplates:
  - metadata:
      name: data
    {{- include "fms.volumeclaim.data" (merge (dict "id" $serv_id) $) | nindent 4 }}