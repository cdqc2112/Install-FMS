{{ $serv_id := "rtu-version-controller" }}
{{ $serv_uidgid := .Values.env.RTU_VERSION_CONTROLLER_UID_GID }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fms.fullname" . }}-{{$serv_id}}
  labels:
    {{- include "fms.labels" . | nindent 4 }}
    app.kubernetes.io/service: {{$serv_id}}
spec:
  serviceName: {{ include "fms.fullname" . }}-{{$serv_id}}
  replicas: 1
  selector:
    matchLabels:
      {{- include "fms.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/service: {{$serv_id}}
  template:
    metadata:
      labels:
        {{- include "fms.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/service: {{$serv_id}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fms.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ (split ":" $serv_uidgid)._0 }}
        runAsGroup: {{ (split ":" $serv_uidgid)._1 }}
        fsGroup: {{ (split ":" $serv_uidgid)._1 }}
      nodeSelector:
        role: "primary"
      containers:
        - name: main
          {{ include "fms.docker-image" (merge (dict "image_id" "fms-rtu-version-controller") $ ) | nindent 10 }}
          imagePullPolicy: IfNotPresent
          env:
          - name: PROXY_DNS
            value: "{{.Values.env.TOPOLOGY_UI_DNS}}"
          - name: SECRET_KEY_FILE
            value: "/secret/key"
          volumeMounts:
          - name: logs
            mountPath: /var/www/logs
          - name: config
          # TODO : look how to make this read only
            mountPath: /updates/customConfig
          - name: context
          # TODO : look how to make this read only
          # + manage 2 folders "context" and "dist"
            mountPath: /updates/context
          - name: dist
          # TODO : look how to make this read only
          # + manage 2 folders "context" and "dist"
            mountPath: /updates/dist
          - name: rtu-version-controller-token-secret
            mountPath: /secret/key
            subPath: secret
            readOnly: true
          resources:
            limits:
              memory: "2048M"
            requests:
              memory: "204.8M"
          livenessProbe:
            exec:
              command:
              - curl
              - -f
              - http://localhost:8085/fms-rtu-version-controller/healthcheck
            initialDelaySeconds: 120
            timeoutSeconds: 8
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3      
          readinessProbe:
            exec:
              command:
              - curl 
              - -f
              - http://localhost:8085/fms-rtu-version-controller/healthcheck
            initialDelaySeconds: 30
            timeoutSeconds: 8
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
      volumes:
      - name: logs
        {{- include "fms.pod-volume.log" (merge (dict "id" $serv_id "path" .Values.env.RTU_VERSION_CONTROLLER) $) | nindent 8 }}
      - name: config
        {{- include "fms.pod-volume.config" (merge (dict "id" $serv_id) $) | nindent 8 }}
      - name: context
        # FIXME: out of scope for now
        emptyDir: {}
      - name: dist
        # FIXME: out of scope for now
        emptyDir: {}
      - name: rtu-version-controller-token-secret
        secret:
          secretName: {{.Values.env.RTU_VERSION_CONTROLLER_TOKEN_SECRET}}
          defaultMode: 0440