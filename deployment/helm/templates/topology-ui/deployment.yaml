{{ $serv_id := "topology-ui" }}
{{ $serv_uidgid := .Values.env.TOPOLOGY_UI_UID_GID }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fms.fullname" . }}-{{$serv_id}}
  labels:
    {{- include "fms.labels" . | nindent 4 }}
    app.kubernetes.io/service: {{$serv_id}}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "fms.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/service: {{$serv_id}}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "fms.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/service: {{$serv_id}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fms.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ (split ":" $serv_uidgid)._0 }}
        runAsGroup: {{ (split ":" $serv_uidgid)._1 }}
        fsGroup: {{ (split ":" $serv_uidgid)._1 }}
      nodeSelector:
        role: "primary"
        endpoints: "true"
      containers:
        - name: main
          {{ include "fms.docker-image" (merge (dict "image_id" "optical-monitoring") $ ) | nindent 10 }}
          imagePullPolicy: IfNotPresent
          env:
          - name: DATA_API
            value: "{{.Values.env.DATA_DNS}}/v1"
          - name: TOPOLOGY_UI_DNS
            value: "{{.Values.env.TOPOLOGY_UI_DNS}}"
          - name: TOPOLOGY_API_DNS
            value: "{{.Values.env.TOPOLOGY_API_DNS}}"
          - name: KEYCLOAK_DNS
            value: "{{.Values.env.KEYCLOAK_DNS}}"
          - name: ALARM_AUTO_REFRESH_INTERVAL
            value: "{{.Values.env.ALARM_AUTO_REFRESH_INTERVAL}}"
          - name: ALARM_DNS
            value: "{{.Values.env.ALARM_DNS}}"
          - name: EDITION
            value: "{{.Values.env.EDITION}}"
          - name: VERSION
            value: "7.10.0"
          - name: HTTP_PORT
            value: "8080"
          - name: HEALTHCHECK_PORT
            value: "8081"
          volumeMounts:
          - name: config
            mountPath: /etc/ui/customConfig
            readOnly: true
          startupProbe:
            httpGet:
              path: /healthcheck
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 8
            # Allowed startup time
            failureThreshold: 12
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8081
            timeoutSeconds: 8
            periodSeconds: 30
            failureThreshold: 3
          resources:
            limits:
              memory: "1024M"
            requests:
              memory: "102.4M"
      volumes:
      - name: config
        {{- include "fms.pod-volume.config" (merge (dict "id" "TOPOLOGY_UI_DATA") $) | nindent 8 }}