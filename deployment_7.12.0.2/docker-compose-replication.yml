#
# This compose file expose specificities of replicated environnment:
#     * replicated services
#     * alteration of main services to include replication
#
version: "3.7"

services:
  postgresql-topology-replica:
    image: "exfo/fms-postgresql-db:git-5ff37206c8f3542a69615cf4871e64a532424ad8"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/topology_db_pwd
      - PGDATA=/opt/fgms/topology
      - REPLICATE_FROM=postgresql-topology
      - |
        POSTGRES_TUNING=
          synchronous_commit = off
          work_mem='64MB'
          shared_buffers='1024MB'
          stats_temp_directory='/var/run/postgresql/'
          jit='off'
    volumes:
      - ${REPLICATION_ROOT_PATH}${REPLICATION_DATA_DIR}${PERSISTENT_DATA_DIR}${TOPOLOGY_DATA}:/opt/fgms/topology
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 4294967296 # This means 4Gib
    secrets:
      - { source : topology_db_pwd, mode: 0400, uid: "70" }
    restart: always
    depends_on:
      - "postgresql-topology"
    deploy:
      resources:
        limits:
          memory: "4096M"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role == replica"
        preferences:
          - spread: node.labels.DB
    networks:
      topology-network:

  postgresql-keycloak-replica:
    image: "exfo/fms-postgresql-db:git-5ff37206c8f3542a69615cf4871e64a532424ad8"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/keycloak_db_pwd
      - POSTGRES_USER=keycloak
      - PGDATA=/var/lib/postgresql/data
      - REPLICATE_FROM=postgresql-keycloak
    secrets:
      - { source : keycloak_db_pwd, mode: 0400, uid: "70" }
    depends_on:
      - "postgresql-keycloak"
    volumes:
      - ${REPLICATION_ROOT_PATH}${REPLICATION_DATA_DIR}${PERSISTENT_DATA_DIR}${SECURITY_DATA}:/var/lib/postgresql/data
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 512000000 # This means 512mb
    deploy:
      resources:
        limits:
          memory: "4096M"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role==replica"
        preferences:
          - spread: node.labels.DB
    networks:
      topology-network:
    restart: always

  measurement-data-db:
    command: --replSet replset --bind_ip_all --keyFile /keyfile/key
    environment:
      - MONGO_REPLICATION=primary
      - MONGO_PRIMARY=measurement-data-db
      - MONGO_SECONDARY=measurement-data-db-replica
    secrets:
      - { source : measure_db_pwd, mode: 0400, uid: "999" }
      - { source : mongo_measure_replica_key, target: /keyfile/key, mode: 0400, uid: "999" }

  measurement-data-db-replica:
    image: "exfo/fms-mongo:git-922a260ce5ddfd31fcdbc2ac92fcc4b5bbdb903e"
    user: 999:999
    environment:
      - MONGO_REPLICATION=secondary
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME_MEASURE}
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/measure_db_pwd
      - MONGO_INITDB_DATABASE=admin
    secrets:
      - { source : measure_db_pwd, mode: 0400, uid: "999" }
      - { source : mongo_measure_replica_key, target: /keyfile/key, mode: 0400, uid: "999" }
    command: mongod --replSet replset --bind_ip_all --keyFile /keyfile/key
    volumes:
      - ${REPLICATION_ROOT_PATH}${REPLICATION_DATA_DIR}${PERSISTENT_DATA_DIR}${MEASUREMENT_DATA}:/data/db
    restart: always
    # needed by replication config at starting: the container does not know its own name before healthcheck is passed
    extra_hosts:
      - "measurement-data-db-replica:127.0.0.1"
    deploy:
      resources:
        limits:
          memory: "${MEMORY_LIMIT_MONGODB_MEASDATA_MO}M"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role == replica"
        preferences:
          - spread: node.labels.DB
    networks:
      topology-network:

  alarming-db:
    command: --replSet replset --bind_ip_all --keyFile /keyfile/key
    environment:
      - MONGO_REPLICATION=primary
      - MONGO_PRIMARY=alarming-db
      - MONGO_SECONDARY=alarming-db-replica
    secrets:
      - { source : alarming_db_pwd, mode: 0400, uid: "999" }
      - { source : mongo_alarm_replica_key, target: /keyfile/key, mode: 0400, uid: "999" }

  alarming-db-replica:
    image: "exfo/fms-mongo:git-922a260ce5ddfd31fcdbc2ac92fcc4b5bbdb903e"
    user: 999:999
    environment:
      - MONGO_REPLICATION=secondary
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME_ALARMING}
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/alarming_db_pwd
      - MONGO_INITDB_DATABASE=admin
    secrets:
      - { source : alarming_db_pwd, mode: 0400, uid: "999" }
      - { source : mongo_alarm_replica_key, target: /keyfile/key, mode: 0400, uid: "999" }
    command: mongod --replSet replset --bind_ip_all --keyFile /keyfile/key
    volumes:
      - ${REPLICATION_ROOT_PATH}${REPLICATION_DATA_DIR}${PERSISTENT_DATA_DIR}${ALARM_DATA}:/data/db
    restart: always
    # needed by replication config at starting: the container does not know its own name before healthcheck is passed
    extra_hosts:
      - "alarming-db-replica:127.0.0.1"
    deploy:
      resources:
        limits:
          memory: "${MEMORY_LIMIT_MONGODB_ALARMING_MO}M"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role==replica"
        preferences:
          - spread: node.labels.DB
    networks:
      topology-network:

  replication-file-srv:
    image: exfo/fms-file-replication:git-f41c0c1e6cd3fa1ddd5a00bd998d51ca242e4898
    secrets:
      - { source : rsyncd_auth, target: /secrets/rsyncd.secrets, mode: 0400, uid: "$MEASUREMENT_FILE_UID" }
    volumes:
      - ${ROOT_PATH}${PERSISTENT_DATA_DIR}${FILE_DATA}:/source${PERSISTENT_DATA_DIR}${FILE_DATA}:ro
    entrypoint: |
      /usr/bin/rsync-daemon --port 8370
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "bash -c 'true >  /dev/tcp/localhost/8370'",
        ]
      start_period: 30s
      interval: 10s
      timeout: 8s
      retries: 1
    restart: always
    user: "${MEASUREMENT_FILE_UID_GID}"
    deploy:
      resources:
        limits:
          memory: 1024M
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role != replica"
          - "node.labels.diskless != true"
    networks:
      topology-network:

  replication-rtu-srv:
    image: exfo/fms-file-replication:git-f41c0c1e6cd3fa1ddd5a00bd998d51ca242e4898
    secrets:
      - { source : rsyncd_auth, target: /secrets/rsyncd.secrets, mode: 0400, uid: "$RTU_VERSION_CONTROLLER_UID" }
    volumes:
      - ${ROOT_PATH}${PERSISTENT_DATA_DIR}${RTU_VERSION_CONTROLLER}:/source${PERSISTENT_DATA_DIR}${RTU_VERSION_CONTROLLER}:ro
    entrypoint: |
      /usr/bin/rsync-daemon --port 8370
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "bash -c 'true >  /dev/tcp/localhost/8370'",
        ]
      start_period: 30s
      interval: 10s
      timeout: 8s
      retries: 1
    restart: always
    user: "${RTU_VERSION_CONTROLLER_UID_GID}"
    deploy:
      resources:
        limits:
          memory: 1024M
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role != replica"
          - "node.labels.diskless != true"
    networks:
      topology-network:

  replication-cfg-srv:
    image: exfo/fms-file-replication:git-f41c0c1e6cd3fa1ddd5a00bd998d51ca242e4898
    user: "${CONFIG_REPLICATION_UID_GID}"
    secrets:
      - { source : rsyncd_auth, target: /secrets/rsyncd.secrets, mode: 0400, uid: "$CONFIG_REPLICATION_UID" }
    volumes:
      - ${ROOT_PATH}:/source:ro
    entrypoint: |
      /usr/bin/rsync-daemon --port 8370
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "bash -c 'true >  /dev/tcp/localhost/8370'",
        ]
      start_period: 30s
      interval: 10s
      timeout: 8s
      retries: 1
    restart: always
    deploy:
      resources:
        limits:
          memory: 1024M
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role != replica"
          - "node.labels.diskless != true"
    networks:
      topology-network:

  replication-victoria-metrics-srv:
    image: exfo/fms-file-replication:git-f41c0c1e6cd3fa1ddd5a00bd998d51ca242e4898
    secrets:
      - { source : rsyncd_auth, target: /secrets/rsyncd.secrets, mode: 0400, uid: "$VICTORIA_METRICS_UID" }
    volumes:
      - ${ROOT_PATH}${PERSISTENT_DATA_DIR}${VICTORIA_METRICS_DATA}:/source${PERSISTENT_DATA_DIR}${VICTORIA_METRICS_DATA}:ro
    entrypoint: |
      /usr/bin/rsync-daemon --port 8370
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "bash -c 'true >  /dev/tcp/localhost/8370'",
        ]
      start_period: 30s
      interval: 10s
      timeout: 8s
      retries: 1
    restart: always
    user: "${VICTORIA_METRICS_UID_GID}"
    deploy:
      resources:
        limits:
          memory: "1024M"
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role != replica"
          - "node.labels.diskless != true"
    networks:
      topology-network:


  file-replication-client:
    image: exfo/fms-file-replication:git-f41c0c1e6cd3fa1ddd5a00bd998d51ca242e4898
    environment:
      - "REPLICATE_FOLDER_VM=rsync://usr@replication-victoria-metrics-srv:8370/source/${PERSISTENT_DATA_DIR}${VICTORIA_METRICS_DATA} ${PERSISTENT_DATA_DIR}${VICTORIA_METRICS_DATA} --snapshot http://victoria-metrics:8428/snapshot --follow-symlinks"
      - "REPLICATE_FOLDER_DEPLOY=rsync://usr@replication-cfg-srv:8370/source/deployment/ /deployment"
      - "REPLICATE_FOLDER_CONFIG=rsync://usr@replication-cfg-srv:8370/source/${CONFIG}/ ${CONFIG}"
      - "REPLICATE_FOLDER_FILE=rsync://usr@replication-file-srv:8370/source/${PERSISTENT_DATA_DIR}${FILE_DATA}/ ${PERSISTENT_DATA_DIR}${FILE_DATA}"
      - "REPLICATE_FOLDER_DISTRIBUTION_DATA=rsync://usr@replication-cfg-srv:8370/source/${PERSISTENT_DATA_DIR}${DISTRIBUTION_DATA}/ ${PERSISTENT_DATA_DIR}${DISTRIBUTION_DATA}"
      - "REPLICATE_FOLDER_RTU_VERSION_CONTROLLER=rsync://usr@replication-rtu-srv:8370/source/${PERSISTENT_DATA_DIR}${RTU_VERSION_CONTROLLER}/ ${PERSISTENT_DATA_DIR}${RTU_VERSION_CONTROLLER}"
      - FILE_REPLICATION_PERIODICITY=${REPLICATION_PERIODICITY}
      - FILE_REPLICATION_RETRY=${REPLICATION_RETRY}
    secrets:
      - { source : rsyncd_auth, target: /secrets/rsyncd.secrets, mode: 0400, uid: "0" }
    volumes:
      - ${MASTER_ROOT_PATH}${LOG_DIR}${FILE_REPLICATION_LOG}:/var/log
      - ${REPLICATION_ROOT_PATH}${REPLICATION_DATA_DIR}:/var/replication
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "[ -f /var/log/ok ] && [ $$(($$(date +%s)-$$(date --utc --reference=/var/log/ok +%s))) -lt 86400 ]",
        ]
      start_period: 180m
      interval: 10s
      timeout: 8s
      retries: 1
    restart: always
    deploy:
      resources:
        limits:
          memory: 1024M
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.role == replica"
    networks:
      topology-network:

secrets:
  mongo_measure_replica_key:    { name: "${MONGO_MEASURE_REPLICATION_TOKEN_SECRET}",  external: true }
  mongo_alarm_replica_key:      { name: "${MONGO_ALARM_REPLICATION_TOKEN_SECRET}",  external: true }
  rsyncd_auth:                  { name: "${FILE_REPLICATION_SECRET}",  external: true }
